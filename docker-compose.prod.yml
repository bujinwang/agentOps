version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: real-estate-crm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-real_estate_crm}
      POSTGRES_USER: ${DATABASE_USER:-crm_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-crm_user} -d ${DATABASE_NAME:-real_estate_crm}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: real-estate-crm-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Application Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: real-estate-crm-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${DATABASE_USER:-crm_user}:${DATABASE_PASSWORD}@postgres:5432/${DATABASE_NAME:-real_estate_crm}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-https://your-domain.com}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      BLOCK_SUSPICIOUS: ${BLOCK_SUSPICIOUS:-true}
      MONITORING_ENABLED: ${MONITORING_ENABLED:-true}
      MONITORING_PROVIDER: ${MONITORING_PROVIDER:-datadog}
      MONITORING_API_KEY: ${MONITORING_API_KEY}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CACHE_ENABLED: ${CACHE_ENABLED:-true}
      COMPRESSION_ENABLED: ${COMPRESSION_ENABLED:-true}
      AUTO_SCALING_ENABLED: ${AUTO_SCALING_ENABLED:-false}
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - crm-network
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      replicas: ${BACKEND_REPLICAS:-1}
      resources:
        limits:
          memory: ${BACKEND_MEMORY_LIMIT:-1G}
          cpus: ${BACKEND_CPU_LIMIT:-1.0}
        reservations:
          memory: ${BACKEND_MEMORY_RESERVATION:-512M}
          cpus: ${BACKEND_CPU_RESERVATION:-0.5}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.24-alpine
    container_name: real-estate-crm-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Monitoring Stack (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: real-estate-crm-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - crm-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: real-estate-crm-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: "grafana-piechart-panel,grafana-worldmap-panel"
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - crm-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Log Aggregation (Optional)
  loki:
    image: grafana/loki:latest
    container_name: real-estate-crm-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - crm-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Log Shipping (Optional)
  promtail:
    image: grafana/promtail:latest
    container_name: real-estate-crm-promtail
    restart: unless-stopped
    volumes:
      - ./backend/logs:/var/log/app:ro
      - ./nginx/logs:/var/log/nginx:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - crm-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  crm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16